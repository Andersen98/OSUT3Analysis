#!/usr/bin/env bash

# Usage:
# $ checkJobs condor/MyCondorDir  

DIR=$1

LOGS=`find ${DIR} -type f -regex ".*\/condor_[^/]*\.log$"`
EXECUTED_LOGS=`grep -c "Job executing on host" ${LOGS} | grep -v ":0$" | sed "s/\(.*\):[^:]*$/\1/g"`
DONE_LOGS=`grep -c "return value\|signal" ${EXECUTED_LOGS} | grep -v ":0$" | sed "s/\(.*\):[^:]*$/\1/g"`
PASS_LOGS=`grep -c "return value 0" ${DONE_LOGS} | grep -v ":0$" | sed "s/\(.*\):[^:]*$/\1/g"`

TOTAL=0
DONE=0
PASS=0
if [ ${#LOGS[@]} -ne 0 ]
then
  TOTAL=`ls ${LOGS} | wc -l`
fi
if [ ${#DONE_LOGS[@]} -ne 0 ]
then
  DONE=`ls ${DONE_LOGS} | wc -l`
fi
if [ ${#PASS_LOGS[@]} -ne 0 ]
then
  PASS=`ls ${PASS_LOGS} | wc -l`
fi
FAIL=`echo "${DONE} ${PASS} - p" | dc`
EXECUTED=`ls ${EXECUTED_LOGS} | wc -l`
RUNNING=`echo "${EXECUTED} ${PASS} - ${FAIL} - p" | dc`
QUEUED=`echo "${TOTAL} ${EXECUTED} - p" | dc`

PASSFRAC=`echo "2 k ${PASS} 100 * ${TOTAL} / p" | dc`
FAILFRAC=`echo "2 k ${FAIL} 100 * ${TOTAL} / p" | dc`
RUNNINGFRAC=`echo "2 k ${RUNNING} 100 * ${TOTAL} / p" | dc`
QUEUEDFRAC=`echo "2 k ${QUEUED} 100 * ${TOTAL} / p" | dc`

echo "${PASS} / ${TOTAL} jobs have finished successfully (${PASSFRAC}%)."
echo "${FAIL} / ${TOTAL} jobs have failed (${FAILFRAC}%)."
echo "${RUNNING} / ${TOTAL} jobs are running (${RUNNINGFRAC}%)."
echo "${QUEUED} / ${TOTAL} jobs are queued (${QUEUEDFRAC}%)."
